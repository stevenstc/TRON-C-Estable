{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","deposit","bind","componentDidMount","Utils","window","loc","document","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","getElementById","value","amount","sponsor","tarifa","send","shouldPollResponse","callValue","render","className","type","id","placeholder","onClick","state","totalInvestors","totalInvested","totalRefRewards","setInterval","setstate","call","esto","setState","parseInt","Investors","_hex","Invested","RefRewards","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","trx","getAccount","mydireccion","address","fromHex","investors","MYwithdrawable","My","style","text","TronLinkInfo","accountAddress","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","getBalance","balanceInSun","balanceInTRX","fromSun","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.4f5e7988.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acÃ¡ ///////////////////////////////////\r\nconst contractAddress = \"TMwXjpcD7c88hfVuAaSbYUBZhS5QZaaMtb\";\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n\r\n  async deposit() {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref'].length === 34) {\r\n          document.getElementById('tarifa').value = 0;\r\n          document.getElementById('sponsor').value = get['ref'];            \r\n        }else{\r\n          document.getElementById('tarifa').value = 0;\r\n           document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n        }\r\n        \r\n        \r\n    }else{\r\n        document.getElementById('tarifa').value = 0;\r\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n    let tarifa = document.getElementById(\"tarifa\").value;\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n  \r\n    return Utils.contract.deposit(tarifa, sponsor).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n\r\n        <div>\r\n          <h6 className=\"text-center\">\r\n            Return: <strong>200%</strong><br />\r\n            <strong>2%</strong> per day<br /><br />\r\n          </h6>\r\n\r\n          <div className=\"form-group text-center\">\r\n            <input type=\"text\" className=\"form-control mb-20 text-center\" id=\"amount\" placeholder=\"Min. 200 TRX\"></input>\r\n            <p className=\"card-text\">You must have ~ 40 TRX to make the transaction</p>\r\n            <button type=\"button\" className=\"primary-btn header-btn text-uppercase mb-20 text-center\" onClick={() => this.deposit()}>Invertir</button>\r\n          </div>\r\n          \r\n        </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <section className=\"section-gap aboutus-area\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 single-services\">\r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalInvestors}</h1>\r\n              <p>\r\n                Global Investors\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-4 single-services\">\r\n              \r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalInvested} TRX</h1>\r\n              <p>\r\n                Global Inverted\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-4 single-services\">\r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalRefRewards} TRX</h1>\r\n              <p>\r\n                Global Referral Rewards\r\n              </p>\r\n            </div>                        \r\n          </div>\r\n        </div>    \r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversiÃ³n para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversiÃ³n para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\r\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\r\n      invested: parseInt(esto.invested._hex)/1000000,\r\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    return (\r\n\r\n      <section className=\"simple-services-area section-gap\">\r\n        <div className=\"container\">\r\n          <header style={{'text-align': 'center'}} className=\"section-header\">\r\n            <h3 className=\"white\"><span style={{'font-weight': 'bold'}}>\r\n              My office:</span> <br></br>\r\n            <span style={{'font-size': '18px'}}>{direccion}</span></h3><br />\r\n            <h3 className=\"white\" >Referral link:</h3>\r\n            <h6 className=\"aboutus-area\" style={{'text-align': 'center', 'padding': '1.5em'}}><a href={link}>{link}</a><br />\r\n            <CopyToClipboard text={link}>\r\n              <button type=\"button\" className=\"primary-btn header-btn\">Copy to clipboard</button>\r\n            </CopyToClipboard>\r\n            </h6>\r\n            <hr></hr>\r\n            \r\n          </header>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{invested} TRX</h4>\r\n              <p>\r\n                Total invested\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{totalRef} TRX</h4>\r\n              <p>\r\n                Total earnings from referrals\r\n              \r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{my} TRX</h4>\r\n              <p>\r\n                My balance\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{balanceRef+my} TRX</h4>\r\n              <p>\r\n                Available\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{withdrawn} TRX</h4>\r\n              <p>\r\n                withdrawn\r\n              \r\n              </p>\r\n            </div>\r\n                    \r\n          </div>\r\n        </div>  \r\n      </section>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth} = this.state;\r\n    return (\r\n\r\n\r\n          <div>\r\n            <h5 className=\"text-center\">Billetera Conectada</h5>\r\n            <h6 className=\"text-center\">\r\n              DirecciÃ³n:<br></br>\r\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n\r\n    \r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-sm-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-sm-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\r\n\r\n            <div className='info col-sm-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div> \r\n\r\n    </>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n      <section className=\"convert-area\" id=\"convert\">\r\n        <div className=\"container\">\r\n          <div className=\"convert-wrap\">\r\n            <div className=\"row justify-content-center align-items-center flex-column pb-30\">\r\n              <h1 className=\"text-white\">Make your investment</h1>           \r\n            </div>\r\n            <div className=\"row justify-content-center align-items-start\">\r\n\r\n              <div className=\"col-lg-6 cols\">\r\n                <CrowdFunding />\r\n              </div>\r\n\r\n              <div className=\"col-lg-6 cols\">\r\n                <TronLinkInfo />\r\n              </div>              \r\n              \r\n            </div>            \r\n          </div>\r\n        </div>  \r\n      </section>\r\n\r\n      <Oficina />   \r\n\r\n      <Datos />    \r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}