{"version":3,"sources":["utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","state","texto","registrado","min","deposit","bind","estado","reInvest","componentDidMount","Utils","window","setInterval","trx","getAccount","account","accountAddress","address","fromHex","investors","call","registered","setState","document","getElementById","value","MIN_DEPOSIT","parseInt","_hex","tarifa","amount","send","shouldPollResponse","callValue","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","inversors","console","log","exist","cons","sponsor","miRegistro","redeposit","render","className","type","id","placeholder","style","onClick","totalInvestors","totalInvested","totalRefRewards","setstate","esto","Investors","Invested","RefRewards","direccion","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","mydireccion","MYwithdrawable","My","available","toFixed","parseFloat","text","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","accountAddressInBase58","getBalance","balanceInSun","balanceInTRX","fromSun","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.664dadd4.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst PRU = \"shasta.\";// shasta1. para inhabilitar red de pruebas\r\nconst WS = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\r\n\r\nconst SC = \"TVDZqoV7DcBfmB2P6G9QTqu7fswfbc7sK7\";// direccion del contrato\r\n\r\nexport default {proxy, PRU, WS,  SC};","import cons from \"../../cons.js\";\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      texto: \"Click to register\",\r\n      registrado: false,\r\n      min: 200\r\n  \r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n    this.reInvest = this.reInvest.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.estado();\r\n    setInterval(() => this.estado(),3*1000);\r\n  };\r\n\r\n  async estado(){\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n\r\n    if (!investors.registered) {\r\n      document.getElementById(\"amount\").value = \"\";\r\n      this.setState({\r\n        texto:\"Click to register\",\r\n        registrado: false\r\n      });\r\n    }else{\r\n\r\n      this.setState({\r\n        texto:\"Invest\",\r\n        registrado: true\r\n      });\r\n\r\n    }\r\n\r\n    var min = await Utils.contract.MIN_DEPOSIT().call();\r\n\r\n    min = parseInt(min._hex)/1000000;\r\n\r\n\r\n    var tarifa = await Utils.contract.tarifa().call();\r\n\r\n    tarifa = parseInt(tarifa._hex);\r\n\r\n    this.setState({\r\n      min: min,\r\n      tarifa: tarifa\r\n    });\r\n\r\n    //console.log(min);\r\n\r\n    \r\n\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n    const {registrado} = this.state;\r\n\r\n\r\n    var amount = document.getElementById(\"amount\").value;\r\n\r\n\r\n    if (registrado) {\r\n\r\n      await Utils.contract.deposit().send({\r\n        shouldPollResponse: true,\r\n        callValue: amount * 1000000 // converted to SUN\r\n      });\r\n\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n    }else{\r\n\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n      var loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n          var getString = loc.split('?')[1];\r\n          var GET = getString.split('&');\r\n          var get = {};\r\n          for(var i = 0, l = GET.length; i < l; i++){\r\n              var tmp = GET[i].split('=');\r\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n          }\r\n          \r\n          if (get['ref']) {\r\n            tmp = get['ref'].split('#');\r\n            var inversors = await Utils.contract.investors(tmp[0]).call();\r\n            console.log(inversors);\r\n            if ( inversors.registered && inversors.exist ) {\r\n              document.getElementById('sponsor').value = tmp[0]; \r\n            }else{\r\n              document.getElementById('sponsor').value = cons.WS;         \r\n            }\r\n          }else{\r\n             document.getElementById('sponsor').value = cons.WS;\r\n          }\r\n             \r\n      }else{\r\n        \r\n          document.getElementById('sponsor').value = cons.WS; \r\n      }\r\n\r\n      let sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n      await Utils.contract.miRegistro(sponsor).send();\r\n\r\n    }\r\n\r\n\r\n    \r\n  };\r\n\r\n\r\n  async reInvest(){\r\n\r\n    const {registrado} = this.state;\r\n\r\n\r\n    var amount = document.getElementById(\"amount\").value;\r\n\r\n    amount = parseInt(amount * 1000000);\r\n\r\n\r\n    if (registrado) {\r\n\r\n      await Utils.contract.redeposit(amount).send();\r\n\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    var { texto, min, tarifa} = this.state;\r\n\r\n    min = \"Min. \"+min+\" TRX\";\r\n\r\n    switch (tarifa) \r\n        {\r\n            case 0:  tarifa = 2;\r\n                     break;\r\n            case 1:  tarifa = 3;\r\n                     break;\r\n            case 2:  tarifa = 4;\r\n                     break;\r\n            case 3:  tarifa = 6;\r\n                     break;\r\n            \r\n            default: tarifa = \"N/A\";\r\n                     break;\r\n        }\r\n\r\n\r\n      \r\n\r\n    \r\n    return (\r\n      \r\n\r\n        <div>\r\n          <h6 className=\"text-center\">\r\n            Return: <strong>{tarifa}00%</strong><br />\r\n            <strong>{tarifa}%</strong> per day<br /><br />\r\n          </h6>\r\n\r\n          <div className=\"form-group text-center\">\r\n            <input type=\"text\" className=\"form-control mb-20 text-center\" id=\"amount\" placeholder={min}></input>\r\n            <p className=\"card-text\">You must have ~ 50 TRX to make the transaction</p>\r\n            \r\n            <button type=\"button\" style={{'margin-right': '3.8em'}} className=\"primary-btn header-btn text-uppercase mb-20 text-center\" onClick={() => this.reInvest()}>Re-Invest</button>\r\n            <button type=\"button\" style={{'margin-right': '3.8em'}} className=\"primary-btn header-btn text-uppercase mb-20 text-center\" onClick={() => this.deposit()}>{texto}</button>\r\n          </div>\r\n          \r\n        </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <section className=\"section-gap aboutus-area\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 single-services\">\r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalInvestors}</h1>\r\n              <p>\r\n                Global Investors\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-4 single-services\">\r\n              \r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalInvested} TRX</h1>\r\n              <p>\r\n                Global Inverted\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-4 single-services\">\r\n              <h1 className=\"pt-40 pb-30 text-white\">{totalRefRewards} TRX</h1>\r\n              <p>\r\n                Global Referral Rewards\r\n              </p>\r\n            </div>                        \r\n          </div>\r\n        </div>    \r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\r\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\r\n      invested: parseInt(esto.invested._hex)/1000000,\r\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    var available = (balanceRef+my);\r\n    available = available.toFixed(6);\r\n    available = parseFloat(available);\r\n\r\n    balanceRef = balanceRef.toFixed(6);\r\n    balanceRef = parseFloat(balanceRef);\r\n\r\n    totalRef = totalRef.toFixed(6);\r\n    totalRef = parseFloat(totalRef);\r\n\r\n    invested = invested.toFixed(6);\r\n    invested = parseFloat(invested);\r\n\r\n    withdrawn = withdrawn.toFixed(6);\r\n    withdrawn = parseFloat(withdrawn);\r\n\r\n    my = my.toFixed(6);\r\n    my = parseFloat(my);\r\n\r\n    return (\r\n\r\n      <section className=\"simple-services-area section-gap\">\r\n        <div className=\"container text-center\">\r\n          <header className=\"section-header\">\r\n            <h3 className=\"white\"><span style={{'fontweight': 'bold'}}>\r\n              My office:</span> <br></br>\r\n            <span style={{'fontsize': '18px'}}>{direccion}</span></h3><br />\r\n            <h3 className=\"white\" >Referral link:</h3>\r\n            <h6 className=\"aboutus-area\" style={{'padding': '1.5em'}}><a href={link}>{link}</a><br />\r\n            <CopyToClipboard text={link}>\r\n              <button type=\"button\" className=\"primary-btn header-btn\">Copy to clipboard</button>\r\n            </CopyToClipboard>\r\n            </h6>\r\n            <hr></hr>\r\n            \r\n          </header>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{invested} TRX</h4>\r\n              <p>\r\n                Total invested\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{totalRef} TRX</h4>\r\n              <p>\r\n                Total earnings from referrals\r\n              \r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{my} TRX</h4>\r\n              <p>\r\n                My balance\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{available} TRX</h4>\r\n              <p>\r\n                Available\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-sm-4 single-services\">\r\n              <h4 className=\"pt-30 pb-20\">{withdrawn} TRX</h4>\r\n              <p>\r\n                withdrawn\r\n              \r\n              </p>\r\n            </div>\r\n                    \r\n          </div>\r\n        </div>  \r\n      </section>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth} = this.state;\r\n    return (\r\n\r\n\r\n          <div>\r\n            <h5 className=\"text-center\">Billetera Conectada</h5>\r\n            <h6 className=\"text-center\">\r\n              Dirección:<br></br>\r\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n\r\n    \r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-sm-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-sm-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\r\n\r\n            <div className='info col-sm-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div> \r\n\r\n    </>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n          <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n      <section className=\"convert-area\" id=\"convert\">\r\n        <div className=\"container\">\r\n          <div className=\"convert-wrap\">\r\n            <div className=\"row justify-content-center align-items-center flex-column pb-30\">\r\n              <h1 className=\"text-white\">Make your investment</h1>           \r\n            </div>\r\n            <div className=\"row justify-content-center align-items-start\">\r\n\r\n              <div className=\"col-lg-6 cols\">\r\n                <CrowdFunding />\r\n              </div>\r\n\r\n              <div className=\"col-lg-6 cols\">\r\n                <TronLinkInfo />\r\n              </div>              \r\n              \r\n            </div>            \r\n          </div>\r\n        </div>  \r\n      </section>\r\n\r\n      <Oficina />   \r\n\r\n      <Datos />    \r\n\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}